{{
  config(
    materialized = 'incremental',
    incremental_strategy = 'delete+insert',
    unique_key = 'id',
    on_schema_change='append_new_columns'
    )
}}

with source as (
    select * from {{ source('trackdechets_production', 'bsda') }} b
    {% if is_incremental() %}
    where b."updatedAt" >= (SELECT toString(toStartOfDay(max(updated_at)))  FROM {{ this }})
    {% endif %}
)
SELECT
    toString(id) AS id,
    toDateTime64("createdAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("createdAt", 'Europe/Paris')) AS created_at,
    toDateTime64("updatedAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("updatedAt", 'Europe/Paris')) AS updated_at,
    toBool("isDraft") AS is_draft,
    toBool("isDeleted") AS is_deleted,
    toLowCardinality(toString(status)) AS status,
    toLowCardinality(toString(type)) AS type,
    toNullable(toBool("emitterIsPrivateIndividual")) AS emitter_is_private_individual,
    toNullable(toString("emitterCompanyName")) AS emitter_company_name,
    toNullable(toString("emitterCompanySiret")) AS emitter_company_siret,
    toNullable(toString("emitterCompanyAddress")) AS emitter_company_address,
    toNullable(toString("emitterCompanyContact")) AS emitter_company_contact,
    toNullable(toString("emitterCompanyPhone")) AS emitter_company_phone,
    toNullable(toString("emitterCompanyMail")) AS emitter_company_mail,
    toNullable(toString("emitterPickupSiteName")) AS emitter_pickup_site_name,
    toNullable(toString("emitterPickupSiteAddress")) AS emitter_pickup_site_address,
    toNullable(toString("emitterPickupSiteCity")) AS emitter_pickup_site_city,
    toNullable(toString("emitterPickupSitePostalCode")) AS emitter_pickup_site_postal_code,
    toNullable(toString("emitterPickupSiteInfos")) AS emitter_pickup_site_infos,
    toNullable(toString("emitterEmissionSignatureAuthor")) AS emitter_emission_signature_author,
    toNullable(toDateTime64("emitterEmissionSignatureDate", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("emitterEmissionSignatureDate", 'Europe/Paris'))) AS emitter_emission_signature_date,
    toLowCardinality(toNullable(toString("wasteCode"))) AS waste_code,
    toNullable(toString("wasteFamilyCode")) AS waste_family_code,
    toNullable(toString("wasteMaterialName")) AS waste_material_name,
    toLowCardinality(toNullable(toString("wasteConsistence"))) AS waste_consistence,
    toNullable(toString("wasteSealNumbers")) AS waste_seal_numbers,
    toNullable(toString("wasteAdr")) AS waste_adr,
    toString(packagings) AS packagings,
    toNullable(toDecimal256("weightValue", 30)) / 1000 AS weight_value,
    toNullable(toString("destinationCompanyName")) AS destination_company_name,
    toNullable(toString("destinationCompanySiret")) AS destination_company_siret,
    toNullable(toString("destinationCompanyAddress")) AS destination_company_address,
    toNullable(toString("destinationCompanyContact")) AS destination_company_contact,
    toNullable(toString("destinationCompanyPhone")) AS destination_company_phone,
    toNullable(toString("destinationCompanyMail")) AS destination_company_mail,
    toNullable(toString("destinationCap")) AS destination_cap,
    toLowCardinality(toNullable(toString(replaceAll("destinationPlannedOperationCode",' ','')))) AS destination_planned_operation_code,
    toNullable(toDateTime64("destinationReceptionDate", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("destinationReceptionDate", 'Europe/Paris'))) AS destination_reception_date,
    toNullable(toDecimal256("destinationReceptionWeight", 30))/1000 AS destination_reception_weight,
    toLowCardinality(toNullable(toString("destinationReceptionAcceptationStatus"))) AS destination_reception_acceptation_status,
    toNullable(toString("destinationReceptionRefusalReason")) AS destination_reception_refusal_reason,
    toLowCardinality(toNullable(toString(replaceAll("destinationOperationCode",' ','')))) AS destination_operation_code,
    toNullable(toDateTime64("destinationOperationDate", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("destinationOperationDate", 'Europe/Paris'))) AS destination_operation_date,
    toNullable(toString("destinationOperationSignatureAuthor")) AS destination_operation_signature_author,
    toNullable(toDateTime64("destinationOperationSignatureDate", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("destinationOperationSignatureDate", 'Europe/Paris'))) AS destination_operation_signature_date,
    toNullable(toDateTime64("transporterTransportSignatureDate", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("transporterTransportSignatureDate", 'Europe/Paris'))) AS transporter_transport_signature_date,
    toNullable(toString("workerCompanyName")) AS worker_company_name,
    toNullable(toString("workerCompanySiret")) AS worker_company_siret,
    toNullable(toString("workerCompanyAddress")) AS worker_company_address,
    toNullable(toString("workerCompanyContact")) AS worker_company_contact,
    toNullable(toString("workerCompanyPhone")) AS worker_company_phone,
    toNullable(toString("workerCompanyMail")) AS worker_company_mail,
    toNullable(toBool("workerWorkHasEmitterPaperSignature")) AS worker_work_has_emitter_paper_signature,
    toNullable(toString("workerWorkSignatureAuthor")) AS worker_work_signature_author,
    toNullable(toDateTime64("workerWorkSignatureDate", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("workerWorkSignatureDate", 'Europe/Paris'))) AS worker_work_signature_date,
    toNullable(toString("brokerCompanyName")) AS broker_company_name,
    toNullable(toString("brokerCompanySiret")) AS broker_company_siret,
    toNullable(toString("brokerCompanyAddress")) AS broker_company_address,
    toNullable(toString("brokerCompanyContact")) AS broker_company_contact,
    toNullable(toString("brokerCompanyPhone")) AS broker_company_phone,
    toNullable(toString("brokerCompanyMail")) AS broker_company_mail,
    toNullable(toString("brokerRecepisseNumber")) AS broker_recepisse_number,
    toLowCardinality(toNullable(toString("brokerRecepisseDepartment"))) AS broker_recepisse_department,
    toNullable(toDateTime64("brokerRecepisseValidityLimit", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("brokerRecepisseValidityLimit", 'Europe/Paris'))) AS broker_recepisse_validity_limit,
    toNullable(toString("destinationOperationNextDestinationCompanyName")) AS destination_operation_next_destination_company_name,
    toNullable(toString("destinationOperationNextDestinationCompanySiret")) AS destination_operation_next_destination_company_siret,
    toNullable(toString("destinationOperationNextDestinationCompanyVatNumber")) AS destination_operation_next_destination_company_vat_number,
    toNullable(toString("destinationOperationNextDestinationCompanyAddress")) AS destination_operation_next_destination_company_address,
    toNullable(toString("destinationOperationNextDestinationCompanyContact")) AS destination_operation_next_destination_company_contact,
    toNullable(toString("destinationOperationNextDestinationCompanyPhone")) AS destination_operation_next_destination_company_phone,
    toNullable(toString("destinationOperationNextDestinationCompanyMail")) AS destination_operation_next_destination_company_mail,
    toNullable(toString("destinationOperationNextDestinationCap")) AS destination_operation_next_destination_cap,
    toLowCardinality(toNullable(toString(replaceAll("destinationOperationNextDestinationPlannedOperationCode",' ','')))) AS destination_operation_next_destination_planned_operation_code,
    toNullable(toBool("weightIsEstimate")) AS weight_is_estimate,
    toNullable(toString("emitterCustomInfo")) AS emitter_custom_info,
    toNullable(toString("destinationCustomInfo")) AS destination_custom_info,
    toNullable(toString("ecoOrganismeName")) AS eco_organisme_name,
    toNullable(toString("ecoOrganismeSiret")) AS eco_organisme_siret,
    toNullable(toString("forwardingId")) as forwarding_id,
	toNullable(toString("groupedInId")) as grouped_in_id,
	toNullable(toBool("wastePop")) as waste_pop,
	toNullable(toString("destinationOperationDescription")) as destination_operation_description,
	toNullable(toBool("workerIsDisabled")) as worker_is_disabled,
	toNullable(toBool("workerCertificationHasSubSectionFour")) as worker_certification_has_sub_section_four,
	toNullable(toBool("workerCertificationHasSubSectionThree")) as worker_certification_has_sub_section_three,
	toNullable(toString("workerCertificationCertificationNumber")) as worker_certification_certification_number,
	toNullable(toDateTime64("workerCertificationValidityLimit", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("workerCertificationValidityLimit", 'Europe/Paris'))) as worker_certification_validity_limit,
	toNullable(toString("workerCertificationOrganisation")) as worker_certification_organisation,
	toNullable(toString("intermediariesOrgIds")) as intermediaries_org_ids,
	toLowCardinality(toNullable(toString("destinationOperationMode"))) as destination_operation_mode,
	toNullable(toString("transportersOrgIds")) as transporters_org_ids,
	toInt256("rowNumber") as row_number,
	toNullable(toString("canAccessDraftOrgIds")) as can_access_draft_org_ids
FROM
    source