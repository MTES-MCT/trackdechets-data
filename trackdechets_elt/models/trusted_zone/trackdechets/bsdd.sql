{{
  config(
    materialized = 'incremental',
    incremental_strategy = 'delete+insert',
    unique_key = 'id',
    on_schema_change='append_new_columns'
    )
}}

with source as (
    select * from {{ source('trackdechets_production', 'bsdd') }} b
    {% if is_incremental() %}
    where b."updatedAt" >= (SELECT toString(toStartOfDay(max(updated_at)))  FROM {{ this }})
    {% endif %}
),
SELECT 
    toString(id) AS id,
    toDateTime64("createdAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("createdAt",'Europe/Paris')) AS created_at,
    toDateTime64("updatedAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("updatedAt",'Europe/Paris')) AS updated_at,
    toLowCardinality(toNullable(toString("emitterType"))) AS emitter_type,
    toNullable(toString("emitterPickupSite")) AS emitter_pickup_site,
    toNullable(toString("emitterCompanyName")) AS emitter_company_name,
    toNullable(toString("emitterCompanySiret")) AS emitter_company_siret,
    toNullable(toString("emitterCompanyAddress")) AS emitter_company_address,
    toNullable(toString("emitterCompanyContact")) AS emitter_company_contact,
    toNullable(toString("emitterCompanyPhone")) AS emitter_company_phone,
    toNullable(toString("emitterCompanyMail")) AS emitter_company_mail,
    toNullable(toString("recipientCap")) AS recipient_cap,
    toLowCardinality(toNullable(toString(replaceAll("recipientProcessingOperation",' ','')))) AS recipient_processing_operation,
    toNullable(toString("recipientCompanyName")) AS recipient_company_name,
    toNullable(toString("recipientCompanySiret")) AS recipient_company_siret,
    toNullable(toString("recipientCompanyAddress")) AS recipient_company_address,
    toNullable(toString("recipientCompanyContact")) AS recipient_company_contact,
    toNullable(toString("recipientCompanyPhone")) AS recipient_company_phone,
    toNullable(toString("recipientCompanyMail")) AS recipient_company_mail,
    toLowCardinality(toNullable(toString("wasteDetailsCode"))) AS waste_details_code,
    toNullable(toString("wasteDetailsOnuCode")) AS waste_details_onu_code,
    toNullable(toString("wasteDetailsAnalysisReferences")) AS waste_details_analysis_references,
    toDecimal256(toNullable("wasteDetailsQuantity"), 30) AS waste_details_quantity,
    toLowCardinality(toNullable(toString("wasteDetailsQuantityType"))) AS waste_details_quantity_type,
    toLowCardinality(toString("status")) AS status,
    toDateTime64("sentAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("sentAt",'Europe/Paris')) AS sent_at,
    toNullable(toString("sentBy")) AS sent_by,
    toNullable(toBool("isAccepted")) AS is_accepted,
    toDateTime64("receivedAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("receivedAt",'Europe/Paris')) AS received_at,
    toDecimal256(toNullable("quantityReceived"), 30) AS quantity_received,
    toNullable(toString(replaceAll("processingOperationDone",' ',''))) AS processing_operation_done,
    toNullable(toString("wasteDetailsName")) AS waste_details_name,
    toNullable(toBool(isDeleted)) AS is_deleted,
    toNullable(toString("receivedBy")) AS received_by,
    toLowCardinality(toNullable(toString("wasteDetailsConsistence"))) AS waste_details_considece,
    toNullable(toString("processedBy")) AS processed_by,
    toDateTime64("processedAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("processedAt",'Europe/Paris')) AS processed_at,
    toLowCardinality(toNullable(toString(replaceAll("nextDestinationProcessingOperation",' ','')))) AS next_destination_processing_operation,
    toNullable(toString("traderCompanyName")) AS trader_company_name,
    toNullable(toString("traderCompanySiret")) AS trader_company_siret,
    toNullable(toString("traderCompanyAddress")) AS trader_company_address,
    toNullable(toString("traderCompanyContact")) AS trader_company_contact,
    toNullable(toString("traderCompanyPhone")) AS trader_company_phone,
    toNullable(toString("traderCompanyMail")) AS trader_company_mail,
    toNullable(toString("traderReceipt")) AS trader_receipt,
    toNullable(toString("traderDepartment")) AS trader_department,
    toDateTime64("traderValidityLimit", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("traderValidityLimit",'Europe/Paris')) AS trader_validity_limit,
    toNullable(toString("processingOperationDescription")) AS processing_operation_description,
    toNullable(toBool("noTraceability")) AS no_traceability,
    toNullable(toBool("signedByTransporter")) AS signed_by_transporter,
    toNullable(toString("customId")) AS custom_id,
    toLowCardinality(toNullable(toString("wasteAcceptationStatus"))) AS waste_acceptation_status,
    toNullable(toString("wasteRefusalReason")) AS waste_refusal_reason,
    toNullable(toString("nextDestinationCompanyName")) AS next_destination_company_name,
    toNullable(toString("nextDestinationCompanySiret")) AS next_destination_company_siret,
    toNullable(toString("nextDestinationCompanyAddress")) AS next_destination_company_address,
    toNullable(toString("nextDestinationCompanyContact")) AS next_destination_company_contact,
    toNullable(toString("nextDestinationCompanyPhone")) AS next_destination_company_phone,
    toNullable(toString("nextDestinationCompanyMail")) AS next_destination_company_mail,
    toNullable(toString("emitterWorkSiteName")) AS emitter_work_site_name,
    toNullable(toString("emitterWorkSiteAddress")) AS emitter_work_site_address,
    toNullable(toString("emitterWorkSiteCity")) AS emitter_work_site_city,
    toLowCardinality(toNullable(toString("emitterWorkSitePostalCode"))) AS emitter_work_site_postal_code,
    toNullable(toString("emitterWorkSiteInfos")) AS emitter_work_site_infos,
    toNullable(toBool("recipientIsTempStorage")) AS recipient_is_temp_storage,
    toDateTime64("signedAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("signedAt",'Europe/Paris')) AS signed_at,
    toNullable(toString("currentTransporterOrgId")) AS current_transporter_org_id,
    toNullable(toString("nextTransporterOrgId")) AS next_transporter_org_id,
    toLowCardinality(toNullable(toString("nextDestinationCompanyCountry"))) AS next_destination_company_country,
    toNullable(toBool("isImportedFromPaper")) AS is_imported_from_paper,
    toNullable(toString("ecoOrganismeName")) AS eco_organisme_name,
    toNullable(toString("ecoOrganismeSiret")) AS eco_organisme_siret,
    wasteDetailsPackagingInfos AS waste_details_packaging_infos,
    toNullable(toString("signedBy")) AS signed_by,
    toNullable(toBool("wasteDetailsPop")) AS waste_details_pop,
    toString("ownerId") AS owner_id,
    toNullable(toString("brokerCompanyName")) AS broker_company_name,
    toNullable(toString("brokerCompanySiret")) AS broker_company_siret,
    toNullable(toString("brokerCompanyAddress")) AS broker_company_address,
    toNullable(toString("brokerCompanyContact")) AS broker_company_contact,
    toNullable(toString("brokerCompanyPhone")) AS broker_company_phone,
    toNullable(toString("brokerCompanyMail")) AS broker_company_mail,
    toNullable(toString("brokerReceipt")) AS broker_receipt,
    toLowCardinality(toNullable(toString("brokerDepartment"))) AS broker_department,
    toDateTime64("brokerValidityLimit", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("brokerValidityLimit",'Europe/Paris')) AS broker_validity_limit,
    toNullable(toBool("wasteDetailsIsDangerous")) AS waste_details_is_dangerous,
    toNullable(toDateTime64("emittedAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("emittedAt",'Europe/Paris'))) AS emitted_at,
    toNullable(toString("emittedBy")) AS emitted_by,
    toNullable(toBool("emittedByEcoOrganisme")) AS emitted_by_eco_organisme,
    toNullable(toDateTime64("takenOverAt", 6, 'Europe/Paris') - timeZoneOffset(toTimeZone("takenOverAt",'Europe/Paris'))) AS taken_over_at,
    toNullable(toString("takenOverBy")) AS taken_over_by,
    toNullable(toString("wasteDetailsParcelNumbers")) AS waste_details_parcel_numbers,
    toNullable(toString("wasteDetailsAnalysisReferences")) AS waste_details_analysis_references,
    toNullable(toString("wasteDetailsLandIdentifiers")) AS waste_details_land_identifiers,
    toNullable(toString("forwardedInId")) AS forwarded_in_id,
    toLowCardinality(toNullable(toString("quantityReceivedType"))) AS quantity_received_type,
    toNullable(toBool("emitterIsForeignShip")) AS emitter_is_foreign_ship,
    toNullable(toBool("emitterIsPrivateIndividual")) AS emitter_is_private_individual,
    toNullable(toString("emitterCompanyOmiNumber")) AS emitter_company_omi_number,
    toNullable(toString("nextDestinationCompanyVatNumber")) AS next_destination_company_vat_number,
    toNullable(toString("recipientsSirets")) AS recipients_sirets,
    toNullable(toString("transportersSirets")) AS transporters_sirets,
    toNullable(toString("intermediariesSirets")) AS intermediaries_sirets,
    toNullable(toString("nextDestinationNotificationNumber")) AS next_destination_notification_number,
    toNullable(toString("wasteDetailsSampleNumber")) AS waste_details_sample_number,
    toNullable(toString("canAccessDraftSirets")) AS can_access_draft_sirets,
    toLowCardinality(toNullable(toString("destinationOperationMode"))) AS destination_operation_mode,
    toNullable(toFloat64(quantityGrouped)) AS quantity_grouped,
    toNullable(toString("nextDestinationCompanyExtraEuropeanId")) AS next_destination_company_extra_european_id,
    toInt256("rowNumber") AS row_number,
    toDecimal256(toNullable("quantityRefused"), 30) AS quantity_refused,
    toLowCardinality(toNullable(toString("citerneNotWashedOutReason"))) AS citerne_not_washed_out_reason,
    toNullable(toBool("HasCiterneBeenWashedOut")) AS has_citerne_been_washed_out,
    toLowCardinality(toNullable(toString("emptyReturnADR"))) AS empty_return_adr,
    toNullable(toString("wasteDetailsNonRoadRegulationMention")) AS waste_details_non_road_regulation_mention,
    toNullable(toBool("wasteDetailsIsSubjectToADR")) AS waste_details_is_subject_to_adr
FROM source